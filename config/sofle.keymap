/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

&mt {
    tapping-term-ms = <300>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <300>;
    flavor = "tap-preferred";
};

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 1>;
            then-layer = <1>;
        };
    };

    behaviors {
        mt_400: mt_400 {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_400";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };

        lt_400: lt_400 {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_400";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&trans                &kp N1  &kp N2  &kp N3  &kp N4                     &kp N5                                                            &kp N6       &kp N7                          &kp N8     &kp N9   &kp N0     &trans
&lt_400 3 GRAVE       &kp Q   &kp W   &kp F   &kp P                      &kp D                                                             &kp J        &kp L                           &kp U      &kp Y    &kp MINUS  &kp BACKSLASH
&kp BACKSPACE         &kp A   &kp R   &kp S   &kp T                      &kp G                                                             &kp H        &kp N                           &kp E      &kp I    &kp O      &kp SEMICOLON
&mt_400 LEFT_ALT F12  &kp Z   &kp X   &kp C   &kp V                      &kp B             &kp C_PLAY_PAUSE      &kp C_MUTE                &kp N        &kp M                           &kp COMMA  &kp DOT  &kp EQUAL  &kp SLASH
                              &trans  &trans  &mt CAPSLOCK SINGLE_QUOTE  &lt 1 UNDERSCORE  &mt LEFT_GUI SPACE    &mt LEFT_SHIFT BACKSPACE  &lt 2 ENTER  &mt LEFT_CONTROL DOUBLE_QUOTES  &trans     &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp C_BRIGHTNESS_DEC C_BRIGHTNESS_INC>;
        };

        nav_sym_media {
            bindings = <
&trans        &trans             &trans            &trans           &trans            &trans                                                  &trans                &trans             &trans     &trans             &trans                 &trans
&trans        &kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE  &kp C_VOLUME_UP  &trans            &trans                                                  &trans                &kp LEFT_BRACKET   &kp UP     &kp RIGHT_BRACKET  &trans                 &trans
&kp HOME      &kp ESCAPE         &kp TAB           &kp ENTER        &kp LEFT_GUI      &trans                                                  &kp LEFT_PARENTHESIS  &kp LEFT           &kp DOWN   &kp RIGHT          &kp RIGHT_PARENTHESIS  &kp END
&kp LEFT_ALT  &kp LEFT_SHIFT     &trans            &trans           &trans            &trans  &trans                &trans                    &kp PAGE_UP           &kp LEFT_BRACE     &kp SPACE  &kp RIGHT_BRACE    &kp PAGE_DOWN          &trans
                                 &trans            &trans           &kp SINGLE_QUOTE  &trans  &mt LEFT_GUI SPACE    &mt LEFT_SHIFT BACKSPACE  &kp UNDERSCORE        &kp DOUBLE_QUOTES  &trans     &trans
            >;
        };

        num_f_sym {
            bindings = <
&trans   &trans           &trans        &trans        &trans        &trans                                                         &trans        &trans         &trans        &trans        &trans        &trans
&trans   &kp EXCLAMATION  &kp AT_SIGN   &kp POUND     &kp DOLLAR    &kp PERCENT                                                    &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp F8        &kp F9        &trans
&trans   &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                                                   &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans
&kp F12  &kp F1           &kp F2        &kp F3        &kp F4        &kp F5         &trans                &trans                    &kp F6        &kp F7         &kp COMMA     &kp DOT       &kp F10       &kp F11
                          &trans        &trans        &trans        &kp BACKSPACE  &mt LEFT_GUI SPACE    &mt LEFT_SHIFT BACKSPACE  &trans        &trans         &trans        &trans
            >;
        };

        bluetooth {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                          &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
