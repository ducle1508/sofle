/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
};

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };

    behaviors {
        mt_400: mt_400 {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_400";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };

        lt_400: lt_400 {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_400";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&trans                    &kp N1  &kp N2  &kp N3  &kp N4                      &kp N5                                                  &kp N6              &kp N7              &kp N8     &kp N9   &kp N0            &trans
&lt_400 3 F12             &kp Q   &kp W   &kp F   &kp P                       &kp D                                                   &kp J               &kp L               &kp U      &kp Y    &kp MINUS         &kp BACKSLASH
&kp TAB                   &kp A   &kp R   &kp S   &kp T                       &kp G                                                   &kp H               &kp N               &kp E      &kp I    &kp O             &kp ENTER
&mt LEFT_SHIFT BACKSPACE  &kp Z   &kp X   &kp C   &kp V                       &kp B              &kp C_PLAY_PAUSE    &kp C_MUTE       &kp K               &kp M               &kp COMMA  &kp DOT  &kp SINGLE_QUOTE  &kp SLASH
                                  &trans  &trans  &mt LEFT_CONTROL SEMICOLON  &mt LEFT_GUI HOME  &lt 1 SPACE         &lt 1 BACKSPACE  &mt LEFT_SHIFT END  &mt LEFT_ALT EQUAL  &trans     &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp C_BRIGHTNESS_DEC C_BRIGHTNESS_INC>;
        };

        nav_sym {
            bindings = <
&trans          &trans      &trans  &trans  &trans            &trans                                         &trans                &trans            &trans     &trans             &trans                 &trans
&kp GRAVE       &kp ESCAPE  &kp W   &kp F   &kp CAPSLOCK      &kp D                                          &trans                &trans            &kp UP     &trans             &trans                 &trans
&kp TAB         &kp A       &kp R   &kp S   &kp LEFT_GUI      &kp T                                          &kp LEFT_PARENTHESIS  &kp LEFT          &kp DOWN   &kp RIGHT          &kp RIGHT_PARENTHESIS  &kp ENTER
&kp LEFT_SHIFT  &kp Z       &kp X   &kp C   &mo 2             &kp V              &trans       &trans         &kp K                 &kp LEFT_BRACKET  &kp SPACE  &kp RIGHT_BRACKET  &trans                 &trans
                            &trans  &trans  &kp LEFT_CONTROL  &mt LEFT_GUI HOME  &kp SPACE    &kp BACKSPACE  &mt LEFT_SHIFT END    &kp LEFT_ALT      &trans     &trans
            >;
        };

        num_f_sym {
            bindings = <
&trans     &trans  &trans  &trans   &trans            &trans                                            &trans        &trans        &trans        &trans        &trans      &trans
&kp F1     &kp F2  &kp F3  &kp F4   &kp F5            &kp F6                                            &trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans      &trans
&kp F7     &kp F8  &kp F9  &kp F10  &kp F11           &kp F12                                           &trans        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans      &trans
&kp LSHFT  &trans  &trans  &trans   &trans            &trans        &trans    &trans                    &kp COMMA     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &trans
                   &trans  &trans   &kp LEFT_CONTROL  &kp LEFT_GUI  &trans    &mt LEFT_SHIFT BACKSPACE  &kp NUMBER_0  &kp LEFT_ALT  &trans        &trans
            >;
        };

        bluetooth_media {
            bindings = <
&trans      &trans             &trans            &trans           &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE  &kp C_VOLUME_UP  &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans             &trans            &trans           &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0       &bt BT_SEL 1      &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                               &trans            &trans           &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
